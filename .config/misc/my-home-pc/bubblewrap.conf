# vim:ft=bash

case "$1" in
    alpine)
        opt_root_dir=~/.sandbox/alpine
        opt_default_sh=zsh
        opt_using_dtach=1
        args=("${args[@]}"
            --bind ~/.sandbox/alpine-home ~
            --bind ~/music/t ~/music/t
            --ro-bind ~/utils ~/utils
            --ro-bind ~/.config/zshrc ~/.config/zshrc
            --ro-bind ~/.config/nim/ ~/.config/nim/
            --setenv TERM "$TERM"
            --setenv PATH "$HOME/bin":/usr/bin:/usr/sbin:/bin:/sbin
        )
        args_post=(
            # sound
            #--ro-bind /dev/snd/ /dev/snd/
        )
        ;;
    clean)
        opt_root_dir=~/.sandbox/alpine
        opt_default_sh=zsh
        args=("${args[@]}"
            --tmpfs ~
            --setenv TERM "$TERM"
        )
        ;;
    clean-tmux)
        opt_root_dir=~/.sandbox/alpine
        opt_default_sh=tmux
        opt_using_dtach=1
        args=("${args[@]}"
            --tmpfs ~
            --ro-bind ~/.config/tmux/tmux.conf ~/.tmux.conf
            --ro-bind ~/.config/zshrc ~/.zshrc
            --ro-bind ~/vimfiles/ ~/vimfiles/
            --ro-bind ~/vimfiles/vimrc ~/.vimrc
            --ro-bind ~/.config/git/ ~/.config/git/
            --ro-bind ~/bin/ ~/bin/
            --setenv EDITOR vim
            --setenv VIMRC_ALLOW_SYSTEM 1
            --setenv TERM "$TERM"
        )
        args_post=(
        )
        ;;
    dep)
        # coc installation: {{{
        # # (in host system)
        # mkdir -p ~/.sandbox && \
        # git clone --branch release https://github.com/neoclide/coc.nvim.git --depth=1
        #
        # alpine dep:
        # nodejs yarn
        #
        # set registry (to npmmirror) with (it will modify file ~/.yarnrc):
        # yarn config set registry https://registry.npmmirror.com
        # }}}
        # TODO: manage ~/.vim/coc.json
        #
        # principle:
        # - this sandbox serves as preparation for sandbox named local (see below).
        # - do not bind private file;
        # - do not execute file in this sandbox from outside;
        opt_root_dir=~/.sandbox/alpine
        opt_default_sh=bash
        opt_using_dtach=1
        t=~/.sandbox/coc-nvim-user/
        if ! [ -e "$t" ]; then
            mkdir -p -- "$t"
        fi
        args=("${args[@]}"
            --setenv TERM "xterm-256color"
            --tmpfs ~
            --ro-bind ~/vimfiles/ ~/vimfiles/
            --setenv EDITOR vim
            --setenv VIMINIT 'so ~/vimfiles/vimrc'
            --setenv VIMRC_ALLOW_SYSTEM 1
            --tmpfs ~/.vim/
            --setenv VIMRC_USING_COC 1

            --ro-bind ~/.sandbox/coc.nvim/ ~/.vim/pack/coc/start/coc.nvim/
            --bind ~/.sandbox/coc-nvim-user/ ~/.config/coc/
            --setenv YARN_REGISTRY https://registry.npmmirror.com
        )
        args_post=(
        )
        ;;
    local)
        # principle:
        # - no network;
        # - do not bind dir readable from dep (avoid writing to it accidentally);
        # - double check before coping files from outside (host system);
        opt_root_dir=~/.sandbox/alpine
        opt_no_net=1
        opt_default_sh=bash
        opt_using_dtach=1
        args=("${args[@]}"
            --setenv TERM "xterm-256color"
            --tmpfs ~
            --ro-bind ~/vimfiles/ ~/vimfiles/
            --setenv EDITOR vim
            --setenv VIMINIT 'so ~/vimfiles/vimrc'
            --setenv VIMRC_ALLOW_SYSTEM 1
            --tmpfs ~/.vim/
            --setenv VIMRC_USING_COC 1
            # these are same as sandbox dep (see above).

            --ro-bind ~/.sandbox/coc.nvim/ ~/.vim/pack/coc/start/coc.nvim/
            --ro-bind ~/.sandbox/coc-nvim-user/ ~/.config/coc/
        )
        args_post=(
        )
        ;;
esac
