" vim: set filetype=tridactyl
" About {{{1
"
" - ~/.tridactylrc will be sourced at last; it can be used for local config. {{{
"   (see `:help source` in tridactyl about configuration file priority) }}}
"
" - search "A-6" in this file, if OS is windows: we need additional setting.
"
" firefox plugin setup {{{
" - Tridactyl: :nativeinstall;
" - Simple Tab Groups (stg): bind physical key <A-g> / <A-e> via global preference
"   (they may be different keys in windows (autohotkey) / macos (karabiner),
"   so we cannot set them via `setpref`);
"   "打开弹出窗口": <A-g>; "移动选中标签页到自定义群组": <A-e> }}}
"
" firefox theme setup {{{
" https://codeberg.org/Freeplay/Firefox-Onebar }}}
"
" - \ at end of line is used for line-continuation, see: {{{
" https://github.com/tridactyl/tridactyl/blob/fcdcdc028f01d61589d3e84923f4d3318967c3aa/src/background/config_rc.ts#L61 }}}
"
" - use `seturl` / `bindurl` for speical case.

" Pre {{{1

set configversion 2.0

" WARNING: use this to clear config (binding, etc) in memory.
" It clears our quickmark, so comment it by default.
" here's how to "backup" quickmark first:
"
" - :viewconfig --user nmaps
"    (get nmaps, and copy them to clipboard)
" - pbpaste | jq | sed -En 's/"[,]$//; s/": "open//; s/^\s*"go/quickmark /p'
"    (pretty print it for execution)
"sanitise tridactyllocal

" about:config {{{1

" simple-tab-group cannot recover local (file:// schema) webpages properly,
" if STG is not the last window to close. (last is private window seems fine)
" **
" It may help to show this info in homepage, which gets shown when creating new window
" **
setpref browser.tabs.warnOnClose true

" default 1; set to 3, then last closed tabs get recovered on startup
setpref browser.startup.page 3

" press alt-somekey without opening menu; ff restart required!
setpref ui.key.menuAccessKey 17

" press alt does not focus on menu
setpref ui.key.menuAccessKeyFocuses false

" disable typing / to quick find
setpref accessibility.typeaheadfind.manual false

" make sites' autofocus harder
setpref browser.autofocus false

" required for userChrome.css (Firefox-Onebar)
setpref toolkit.legacyUserProfileCustomizations.stylesheets true

" thin tabbar
setpref browser.uidensity 1

" I don't use pocket
setpref extensions.pocket.enabled false

" General Settings {{{1
set allowautofocus false
set smoothscroll true
set hintchars asdfgqwertzxcv
set modeindicatorshowkeys true
set followpagepatterns {"next":"^(next|newer|上一章|上一篇|上一页)\\b|»|>>|more","prev":"^(prev(ious)?|older|下一章|下一篇|下一页)\\b|«|<<"}
set tabopencontaineraware true
" tabo default alias (tabonly) is dangerous, so let's remap it.
alias tabo tabopen

" Security {{{1
" default binding p / P (if content in clipboard does not look like url, then
" search it) is dangerous; so use a blank search engine as default.
set searchengine blank
set searchurls.blank http://localhost/maybe-pressed-wrong-key?%s

" Search Engine {{{1
set searchurls.bd https://www.baidu.com/s?wd=%s
set searchurls.bg https://www.bing.com/search?q=%s&ensearch=1
set searchurls.bl https://search.bilibili.com/all?keyword=%s
set searchurls.cd https://www.bing.com/dict/search?mkt=zh-CN&q=%s
set searchurls.cnf https://command-not-found.com/%s
set searchurls.co https://www.collinsdictionary.com/english/%s
set searchurls.dg https://duckduckgo.com/?q=%s
set searchurls.gg https://www.google.com/search?q=%s
set searchurls.man https://man.archlinux.org/search?q=%s&go=Go
set searchurls.pkg https://pkgs.org/search/?q=%s
set searchurls.r https://old.reddit.com/r/%s
set searchurls.sh http://symbolhound.com/?q=%s
set searchurls.tr https://www.microsofttranslator.com/bv.aspx?from=&to=zh-CHS&a=%s
set searchurls.wk https://www.wikipedia.org/w/index.php?title=Special:Search&search=%s
set searchurls.yh https://search.yahoo.com/search?q=%s

" Default Binding can be viewed here: {{{1
" moz-extension://26bcd09d-5ca9-41d3-bceb-069caf61445b/static/docs/classes/_src_lib_config_.default_config.html
" (**open it with firefox**; get this by `:help` then read the second paragraph.)
"
" tridactyl takes 100ms for every excmd, so we do re-bind default binding
" here to speedup loading.
" https://github.com/tridactyl/tridactyl/issues/1409#issuecomment-581299773

" Binds {{{1
bind x tabclose
bind X undo
bind d scrollpage 0.5
bind u scrollpage -0.5
" j / k: default (10) too much.
bind j scrollline 5
bind k scrollline -5
bind gs viewsource
bind gf hint -t
bind gp pin
bind gm mute toggle
bind m gobble 1 markadd
" default is `, which is hard to press in most 60% keyboard.
bind ' gobble 1 markjump
bind gC tabduplicate
bind gi hint input:read-write,textarea:read-write

bind --mode=normal ZZ js alert("before closing window, ensure STG is the last window!")

" make <Escape> able to exit simple-tab-group's switch group page.
unbind --mode=normal <Escape>

" this is quite handy.
" I don't know if it is default... just record it here.
bind --mode=browser <C-6> tab #

" in windows, <A-1> - <A-9> can not be used to navigate tab (it's ok in linux); {{{
" so we map <A-1> - <A-9> to <C-1> - <C-9> with ahk to make them work.
"
" after using tridactyl, <C-6> should be used as <C-^> (like in vim);
" so we bind <C-6> to <A-6> in ahk, then <C-6> and <A-6> produce different keys:
"
" When we pressing <A-6>, <C-6> is recognized by firefox, so <C-6> should be unbind.
"
" But tridactylrc is used in different OS,
" so we need to put these in ~/.tridactylrc only if using Windows:
"
"    bind --mode=browser <A-6> tab #
"    unbind <C-6>
"    unbind --mode=browser <C-6>
" }}}

" search with...
bind --mode=visual s composite js " " + document.getSelection().toString() | fillcmdline open ; text.beginning_of_line ; text.forward_word ; text.forward_char
bind --mode=visual S composite js " " + document.getSelection().toString() | fillcmdline tabopen ; text.beginning_of_line ; text.forward_word ; text.forward_char

" easy translation
bind --mode=visual cd composite js "cd " + document.getSelection().toString() | tabopen

" do not use bmark, and we use `af` as binding; so unbind a / A.
unbind a
unbind A

" create duplicated binding for muscle memory.
bind yf hint -y
bind af hint -qb

" yank (ip)
bind --mode=normal y1 composite js document.location.hostname | clipboard yank
" yank (ip:port)
bind --mode=normal y2 composite js document.location.host | clipboard yank
" yank (url decoded)
bind yY composite js decodeURI(document.location) | clipboard yank

" let's keep <C-f> for native function (it's search in windows / linux)
unbind <C-f>
" some others.
unbind <C-b>
unbind <C-a>
unbind <C-x>
unbind <C-o>
unbind <C-d>
unbind <C-u>
" <C-i> in input / insert mode should be kept (edit-with-vim)
unbind --mode=normal <C-i>

" readline {{{2
" <C-/> as select_all works natively on GTK (linux) (without bind).
" - TODO: test if select_all (<C-/>) work for windows.
" - TODO: impl select_all for ex mode.
" custom select_all in ex mode won't work: {{{
"bind --mode=ex <C-/> js document.activeElement.select()
" }}}
bind --mode=input <C-/> js document.activeElement.select()
bind --mode=insert <C-/> js document.activeElement.select()
bind --mode=ex <C-a> text.beginning_of_line
bind --mode=input <C-a> text.beginning_of_line
bind --mode=insert <C-a> text.beginning_of_line
bind --mode=ex <C-e> text.end_of_line
bind --mode=input <C-e> text.end_of_line
bind --mode=insert <C-e> text.end_of_line
bind --mode=ex <C-f> text.forward_char
bind --mode=input <C-f> text.forward_char
bind --mode=insert <C-f> text.forward_char
bind --mode=ex <C-b> text.backward_char
bind --mode=input <C-b> text.backward_char
bind --mode=insert <C-b> text.backward_char
bind --mode=ex <C-h> text.delete_backward_char
bind --mode=input <C-h> text.delete_backward_char
bind --mode=insert <C-h> text.delete_backward_char
bind --mode=ex <C-d> text.delete_char
bind --mode=input <C-d> text.delete_char
bind --mode=insert <C-d> text.delete_char

" <C-w> for windows / linux does not work;
" so just do not bind it, to get a universal experience.

" use <C-Backspace> to backward_kill_word in all OS; {{{
" this is default on linux / windows }}}
bind --mode=ex <C-Backspace> text.backward_kill_word
bind --mode=input <C-Backspace> text.backward_kill_word
bind --mode=insert <C-Backspace> text.backward_kill_word
bind --mode=ex <C-u> text.backward_kill_line
bind --mode=input <C-u> text.backward_kill_line
bind --mode=insert <C-u> text.backward_kill_line
bind --mode=ex <C-k> text.kill_line
bind --mode=input <C-k> text.kill_line
bind --mode=insert <C-k> text.kill_line
" }}}2

" Site Settings {{{1

" this is heavy on CPU, so only use it for specific sites.
seturl www.bing.com/dict preventautofocusjackhammer true

" some general rule:
" - bind c for site specific hint;

" qidian.com {{{
bindurl qidian.com --mode=normal c hint -Jc span.review-count\
,div.chapter-control > a\
,span.j-open-reply\
,div.nav-btn-group > a.nav-btn\
,button.flex.items-center.text-s-gray-500.font-medium.text-s3.mt-8px.h-28px\
,.review-replies-popup > .close-btn
seturl qidian.com hintchars vzcxsda
" don't know why with default hintfiltermode (simple), it's easy to click wrong hint.
" so use vimperator-mode to allow filtering by pressing number (which is in review-count).
seturl qidian.com hintfiltermode vimperator
" native <Space> blocks sometimes.
bindurl qidian.com --mode=normal <Space> scrollpage 0.97
bindurl qidian.com --mode=normal <S-Space> scrollpage -0.97
" }}}

" bilibili.com {{{
bindurl bilibili.com --mode=normal c hint -Jc li.be-tab-item,div.toggle-btn\
,div.list-box > div > div.item.sortable\
,#app > div > aside.left > section.sticky > div > div.bili-dyn-live-users__body > div > div.bili-dyn-live-users__item__right\
,#app > div > aside.right > section.sticky > div > div:nth-child(n)\
,#app > div > main > section:nth-child(2) > div > div.bili-dyn-up-list__window > div > div:nth-child(n)\
,div.view-more > div.view-more-default > span.view-more-btn\
,#app > div > div > div.topic-detail__content > div > div.topic-list > div.list-view.topic-list__flow-list > div:nth-child(1) > div:nth-child(n) > div > div > div.bili-dyn-item__footer > div:nth-child(2) > div

" emulate arrow key (to control video player).
" this takes high cpu, use with care.
"bindurl bilibili.com --mode=normal j exclaim_quiet powershell -Command "(New-Object -ComObject WScript.Shell).SendKeys('{DOWN}')"
"bindurl bilibili.com --mode=normal k exclaim_quiet powershell -Command "(New-Object -ComObject WScript.Shell).SendKeys('{UP}')"
"bindurl bilibili.com --mode=normal h exclaim_quiet powershell -Command "(New-Object -ComObject WScript.Shell).SendKeys('{LEFT}')"
"bindurl bilibili.com --mode=normal l exclaim_quiet powershell -Command "(New-Object -ComObject WScript.Shell).SendKeys('{RIGHT}')"

" }}}

" bind c for sub pages {{{
bindurl lobste.rs --mode=normal c hint -bJc span.comments_label > a
bindurl news.ycombinator.com --mode=normal c hint -bJc span.subline > a:nth-child(6)
bindurl old.reddit.com --mode=normal c hint -bJc a.bylink.comments.may-blank
" }}}

" site redirection {{{
autocmd DocStart ^http(s?)://www.reddit.com/r/ urlmodify -t www old
" }}}

" Misc {{{1

" read it later (all thing about <C-b>) {{{2

" preview current page.
bind --mode=normal <C-b> js window.location = 'https://www.instapaper.com/text?u=' + encodeURIComponent(window.location.href);

" ... then save it to read list.
bindurl https://www.instapaper.com/text\?u=.* --mode=normal <C-b> hint -Jc .js_read_later

" open instapaper easily. (t <CR> <C-b>)
bindurl moz-extension://.*/static/newtab.html <C-b> open https://www.instapaper.com/u

" ... rapid mode in various site;
" show hint in sibling node instead of target node, so we can see full title.
bindurl https://news.ycombinator.com/(\?p=.*|)$ <C-b> hint -qJc td.votelinks -F e => { tri.excmds.tabopen("-b",'https://www.instapaper.com/text?u=' + encodeURIComponent(e.nextElementSibling.querySelector('span.titleline > a').href)); }
bindurl https://lobste.rs/(page/.*|)$ <C-b> hint -qJc div.voters -F e => { tri.excmds.tabopen("-b",'https://www.instapaper.com/text?u=' + encodeURIComponent(e.nextElementSibling.querySelector('a.u-url').href)); }

" Load local config and alert for finish {{{1
source ~/.tridactylrc
js alert("tridactylrc loaded.")
