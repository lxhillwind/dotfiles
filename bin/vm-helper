#!/usr/bin/env bash
# vim:fdm=marker
set -e

# utils. {{{1
if [ -n "$VM_USING_VIRTUALBOX" ] || ! [ -f ~/.config/misc/qemu.conf ]; then
    vm_is_virtualbox=1
else
    vm_is_virtualbox=
fi

# qemu wrapper. {{{1
# pass env DEBUG=1 to print generated cmd;
#
# config (contains profiles definition) is put in QEMU_IMG_DIR;
#
# example:
#
# ```bash
# case "$1" in
#   profile-1)
#     args=(
#       qemu-system-x86_64
#       -nic user
#       -m 1g
#       -hda alpine.qcow2
#     )
#     ;;
#   profile-2)
#     args=(
#       qemu-system-x86_64
#       # with port forwarding
#       -nic user,hostfwd=tcp:127.0.0.1:2333-:22
#       -m 1g
#       -hda alpine.qcow2
#     )
#     ;;
# esac
# ```
launch_qemu()
{
    cd ~/qemu
    args=()
    source ~/.config/misc/qemu.conf

    if [ "${#args[@]}" -eq 0 ]; then
        vm_list
        exit 1
    fi

    shift
    if [ -n "$DEBUG" ]; then
        printf "%s %s\n" "${args[*]}" "$*"
    else
        exec "${args[@]}" "$@"
    fi
}

# vm_list / vm_start impl. {{{1
vm_list()
{
    printf '%s\n\n%s\n\n%s\n' \
        'profile not found.' 'usage: $0 {profile} [args...]' 'supported profiles:' >&2
    if [ -n "$vm_is_virtualbox" ]; then
        exec VBoxManage list vms
    else
        grep -Ewo '^\s+[a-zA-Z0-9_-][^: ]*\)$' ~/.config/misc/qemu.conf | tr -d ')'
    fi
}

vm_start()
{
    if [ -n "$vm_is_virtualbox" ]; then
        exec VBoxManage startvm "$@"
    else
        launch_qemu "$@"
    fi
}

# main {{{1
main()
{
    if [ $# -eq 0 ]; then
        vm_list
    else
        vm_start "$@"
    fi
}

main "$@"
