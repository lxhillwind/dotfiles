" vim: fdm=marker
" vimrc for +eval.
"
" about loading order:
"
" disable filetype detection before ":packadd", otherwise ftdetect in packages
" won't be loaded. (call "filetype off" to ensure it is disabled)
"
" "colorscheme XXX" should be called very lately, since it usally depends on
" "syntax on", which calls "filetype on", if not loaded (or filetype-off
" before).
"
" be sure to also call "syntax on", if set colorscheme in vimrc.local.

if v:version < 800
  echoerr 'vim version too old:' v:version
  finish
endif

" add this directory to &rtp / &pp
execute 'set rtp^=' . fnameescape(expand('<sfile>:p:h'))
execute 'set rtp+=' . fnameescape(expand('<sfile>:p:h') . '/after')
if exists('&pp')
  execute 'set pp^=' . fnameescape(expand('<sfile>:p:h'))
endif

let s:self = expand('<sfile>')
function! s:load_script(file) abort
  exec 'source' fnameescape(fnamemodify(s:self, ':p:h') . '/' . a:file)
endfunction

call s:load_script('vimrc.tiny')
call s:load_script('rc/option.vim')
call s:load_script('rc/keymap.vim')
call s:load_script('rc/command.vim')
call s:load_script('rc/pack.vim')
call s:load_script('rc/tasks.vim')

if has('win32')
  call s:load_script('rc/win32.vim')
endif

" ensure filetype detection is disabled before calling ":packadd".
filetype off

" load plugin (:Pack is defined in rc/pack.vim)
if exists(':Pack') == 2
  Pack 'vim-filelist'
  Pack 'vim-jump'
  Pack 'vim-sh'
endif

" source local vimrc
if filereadable(fnamemodify(s:self, ':p:h') . '/' . 'vimrc.local')
  call s:load_script('vimrc.local')
else
  " use default plugin
  call s:load_script('rc/pkgs.vim')
endif

" this also enables filetype.
filetype plugin indent on

" set colorscheme (if not set before) at very end (after "filetype on");
" since it ("syntax on") loads filetype.vim unless already loaded.
call s:load_script('rc/color.vim')
